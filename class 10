# Understanding the JavaScript Call Stack

What is a ‘call’?
 a call stack is a data structure that uses the Last In, First Out (LIFO) principle to temporarily store and manage function invocation (call).

How many ‘calls’ can happen at once?
The call stack is primarily used for function invocation (call). Since the call stack is single, function(s) execution, is done, one at a time, from top to bottom. It means the call stack is synchronous.

What does LIFO mean?
LIFO: When we say that the call stack, operates by the data structure principle of Last In, First Out, it means that the last function that gets pushed into the stack is the first to be pop out, when the function returns.

Draw an example of a call stack and the functions that would need to be invoked to generate that call stack.
What causes a Stack Overflow?

function firstFunction(){
  throw new Error('Stack Trace Error');
}

function secondFunction(){
  firstFunction();
}

function thirdFunction(){
  secondFunction();
}

thirdFunction();



# JavaScript error messages

1-What is a ‘refrence error’?
when you try to use a variable that is not yet declared you get this type os errors.

2- What is a ‘syntax error’?
his occurs when you have something that cannot be parsed in terms of syntax, like when you try to parse an invalid object using JSON.parse

3- What is a ‘range error’?
thrown when trying to pass a value as an argument to a function that does not allow a range that includes the value.

4- What is a ‘tyep error’?
the mistaken rejection of the null hypothesis

5- What is a breakpoint?
software development, a breakpoint is an intentional stopping or pausing place in a program, put in place for debugging purposes

5- What does the word ‘debugger’ do in your code?
running an app within a debugger, also called debugging mode, means that the debugger actively monitors everything that's happening as the program runs



